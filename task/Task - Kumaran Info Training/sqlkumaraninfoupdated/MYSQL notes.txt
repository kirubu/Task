DDL-create, alter,drop,truncate

DML-insert,update,delete,select

DCL-grant ,revoke

TCL-commit rollback


1. SQL queries are case insensitive

2.datatypes we use in MySQL
  int
  float(5,3)--10.345
  numeric-2 ^38


  char(1)-raj
  varchar(10)-raj

  date-yyyy-mm-dd
  time-hh:mm:ss

domain integrity-datatype,range of values
auto_generate

constraints
-----------
primary key
unique
foreign key
not null(should not be blank) is not same as 0
default 
check

create table student (studentid int primary key ,name varchar(50), dob date, age int(3), phonenumber varchar(10));

Test on Joins
-------------

List all the products that are ordered where quantity more than 10
List all the product and categories which has maximum price
lists the employees that have registered more than 10 orders
find the name, occupation, and age of the customer who has placed at least one order.


SELECT Orders.OrderID, Customers.CustomerName
FROM Orders
INNER JOIN Customers ON Orders.CustomerID = Customers.CustomerID;


SELECT name, occupation, age FROM customer C  
WHERE EXISTS (SELECT * FROM Orders O  
WHERE C.cust_id = O.cust_id);  


SELECT COUNT(CustomerID), Country
FROM Customers
GROUP BY Country
HAVING COUNT(CustomerID) > 5
ORDER BY COUNT(CustomerID) DESC;

SELECT ProductName
FROM Products
WHERE ProductID = ANY
  (SELECT ProductID
  FROM OrderDetails
  WHERE Quantity = 10);


SELECT Employees.LastName, COUNT(Orders.OrderID) AS NumberOfOrders
FROM (Orders
INNER JOIN Employees ON Orders.EmployeeID = Employees.EmployeeID)
GROUP BY LastName
HAVING COUNT(Orders.OrderID) > 10;



You can GRANT and REVOKE privileges on various database objects in MySQL.
 You can then view the privileges assigned to a user using the SHOW GRANTS command.

GRANT privileges ON object TO user;

Privilege	Description
SELECT	Ability to perform SELECT statements on the table.
INSERT	Ability to perform INSERT statements on the table.
UPDATE	Ability to perform UPDATE statements on the table.
DELETE	Ability to perform DELETE statements on the table.
INDEX	Ability to create an index on an existing table.
CREATE	Ability to perform CREATE TABLE statements.
ALTER	Ability to perform ALTER TABLE statements to change the table definition.
DROP	Ability to perform DROP TABLE statements.
GRANT OPTION	Allows you to grant the privileges that you possess to other users.
ALL	Grants all permissions except GRANT OPTION


GRANT SELECT, INSERT, UPDATE, DELETE ON contacts TO 'smithj'@'localhost';

GRANT ALL ON contacts TO 'smithj'@'localhost';

GRANT SELECT ON contacts TO '*'@'localhost';


REVOKE privileges ON object FROM user;


REVOKE DELETE, UPDATE ON contacts FROM 'smithj'@'localhost';

DELIMITER &&  
CREATE PROCEDURE procedure_name [[IN | OUT | INOUT] parameter_name datatype [, parameter datatype]) ]    
BEGIN    
    Declaration_section    
    Executable_section    
END &&  
DELIMITER ;   

DELIMITER &&  
CREATE PROCEDURE get_merit_student ()  
BEGIN  
    select * from student; 
    SELECT COUNT(studentid) AS Total_Student FROM student;    
END &&  
DELIMITER ;  



DELIMITER &&  
CREATE PROCEDURE get_customers (IN var1 int)  
BEGIN  
    SELECT * FROM customers where customerid=var1;  
    
END &&  
DELIMITER ; 

call get_customers(222);
 
DELIMITER $$
CREATE PROCEDURE Getdetails(IN ad varchar(30))
BEGIN
SELECT
*
FROM
customers	
WHERE address="ad" ;
END$$
DELIMITER ;



DELIMITER &&  
CREATE PROCEDURE display_max_mark (OUT highestmark INT)  
BEGIN  
    SELECT MAX(marks) INTO highestmark FROM student_info;   
END &&  
DELIMITER ;  


mysql> CALL display_max_mark(@M);  
mysql> SELECT @M;  


DELIMITER &&  
CREATE PROCEDURE display_marks (INOUT var1 INT)  
BEGIN  
    SELECT marks INTO var1 FROM student_info WHERE stud_id = var1;   
END &&  
DELIMITER ;  


mysql> SET @M = '3';  
mysql> CALL display_marks(@M);  
mysql> SELECT @M;  


SHOW PROCEDURE STATUS WHERE db = 'mystudentdb';  

mysql> GRANT EXECUTE ON FUNCTION studentdetails TO *@localhost;  
mysql> SHOW GRANTS FOR john@localhost;  

